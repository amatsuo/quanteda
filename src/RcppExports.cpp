// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// ngramcpp
std::vector< std::string > ngramcpp(std::vector< std::string > words, int n, int skip, std::string delim);
RcppExport SEXP quanteda_ngramcpp(SEXP wordsSEXP, SEXP nSEXP, SEXP skipSEXP, SEXP delimSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::vector< std::string > >::type words(wordsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type skip(skipSEXP);
    Rcpp::traits::input_parameter< std::string >::type delim(delimSEXP);
    __result = Rcpp::wrap(ngramcpp(words, n, skip, delim));
    return __result;
END_RCPP
}
// skipgramcpp
std::vector< std::string > skipgramcpp(std::vector< std::string > words, int n, int skip, std::string delim);
RcppExport SEXP quanteda_skipgramcpp(SEXP wordsSEXP, SEXP nSEXP, SEXP skipSEXP, SEXP delimSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::vector< std::string > >::type words(wordsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type skip(skipSEXP);
    Rcpp::traits::input_parameter< std::string >::type delim(delimSEXP);
    __result = Rcpp::wrap(skipgramcpp(words, n, skip, delim));
    return __result;
END_RCPP
}
// ngramcppl
std::vector< std::vector<std::string> > ngramcppl(SEXP x, int n, int skip, std::string delim);
RcppExport SEXP quanteda_ngramcppl(SEXP xSEXP, SEXP nSEXP, SEXP skipSEXP, SEXP delimSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type skip(skipSEXP);
    Rcpp::traits::input_parameter< std::string >::type delim(delimSEXP);
    __result = Rcpp::wrap(ngramcppl(x, n, skip, delim));
    return __result;
END_RCPP
}
// skipgramcppl
std::vector< std::vector<std::string> > skipgramcppl(SEXP x, int n, int skip, std::string delim);
RcppExport SEXP quanteda_skipgramcppl(SEXP xSEXP, SEXP nSEXP, SEXP skipSEXP, SEXP delimSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type skip(skipSEXP);
    Rcpp::traits::input_parameter< std::string >::type delim(delimSEXP);
    __result = Rcpp::wrap(skipgramcppl(x, n, skip, delim));
    return __result;
END_RCPP
}
// wordfishcpp
Rcpp::List wordfishcpp(SEXP wfm, SEXP dir, SEXP priors, SEXP tol);
RcppExport SEXP quanteda_wordfishcpp(SEXP wfmSEXP, SEXP dirSEXP, SEXP priorsSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type wfm(wfmSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dir(dirSEXP);
    Rcpp::traits::input_parameter< SEXP >::type priors(priorsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type tol(tolSEXP);
    __result = Rcpp::wrap(wordfishcpp(wfm, dir, priors, tol));
    return __result;
END_RCPP
}
