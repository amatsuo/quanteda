% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/corpus.R
\name{corpus}
\alias{corpus}
\alias{corpus.VCorpus}
\alias{corpus.character}
\alias{corpus.data.frame}
\alias{corpus.kwic}
\title{construct a corpus object}
\usage{
corpus(x, ...)

\method{corpus}{character}(x, docnames = NULL, docvars = NULL,
  source = NULL, notes = NULL, citation = NULL, ...)

\method{corpus}{data.frame}(x, text_field = "text", source = NULL,
  notes = NULL, citation = NULL, ...)

\method{corpus}{kwic}(x, ...)

\method{corpus}{VCorpus}(x, ...)
}
\arguments{
\item{x}{a valid corpus source object}

\item{...}{not used directly}

\item{docnames}{Names to be assigned to the texts, defaults to the names of 
the character vector (if any), otherwise assigns "text1", "text2", etc.}

\item{docvars}{A data frame of attributes that is associated with each text.}

\item{source}{A string specifying the source of the texts, used for 
referencing.}

\item{notes}{A string containing notes about who created the text, warnings, 
To Dos, etc.}

\item{citation}{Information on how to cite the corpus.}

\item{text_field}{the character name or integer index of the source \code{data.frame}
indicating the variable to be read in as text, which must be a character vector.
All other variables in the data.frame will be imported as docvars.  This argument 
is only used for \code{data.frame} objects.}
}
\value{
A corpus class object containing the original texts, document-level 
  variables, document-level metadata, corpus-level metadata, and default 
  settings for subsequent processing of the corpus.
}
\description{
Creates a corpus object from available sources.  The currently available  
sources are: 
\itemize{ 
\item a \code{character} vector, consisting of one document per element.
\item a \code{data.frame}, whose default variable containing the document is 
  character vector named \code{text}, although this can be set to any other
  variable name using the \code{text_field} argument.  Other variables are 
  imported as document-level meta-data.
\item a \code{kwic} object constructed by \code{\link{kwic}}.
\item a \pkg{tm} \link[tm]{VCorpus} class  object, with the fixed metadata 
  fields imported as document-level metadata. Corpus-level metadata is not 
  currently imported.
}
}
\details{
The texts and document variables of corpus objects can also be 
  accessed using index notation. Indexing a corpus object as a vector will 
  return its text, equivalent to \code{texts(x)}.  Note that this is not the 
  same as subsetting the entire corpus -- this should be done using the 
  \code{\link{subset}} method for a corpus.
  
  Indexing a corpus using two indexes (integers or column names) will return 
  the document variables, equivalent to \code{docvars(x)}.  Because a corpus 
  is also a list, it is also possible to access, create, or replace docvars 
  using list notation, e.g. \code{myCorpus[["newSerialDocvar"]] <- 
  paste0("tag", 1:ndoc(myCorpus))}.
  
  For details, see \link{corpus-class}.
}
\section{A warning on accessing corpus elements}{

  A corpus currently 
  consists of an S3 specially classed list of elements, but **you should not 
  access these elements directly**. Use the extractor and replacement 
  functions instead, or else your code is not only going to be uglier, but
  also likely to break should the internal structure of a corpus object
  change (as it inevitably will as we continue to develop the package,
  including moving corpus objects to the S4 class system).
}
\examples{
# create a corpus from texts
corpus(data_char_inaugural)

# create a corpus from texts and assign meta-data and document variables
ukimmigCorpus <- corpus(data_char_ukimmig2010, 
                        docvars = data.frame(party = names(data_char_ukimmig2010))) 

corpus(texts(data_corpus_irishbudget2010))

# import a tm VCorpus
if ("tm" \%in\% rownames(installed.packages())) {
    data(crude, package = "tm")    # load in a tm example VCorpus
    mytmCorpus <- corpus(crude)
    summary(mytmCorpus, showmeta=TRUE)
    
    data(acq, package = "tm")
    summary(corpus(acq), 5, showmeta=TRUE)
    
    tmCorp <- tm::VCorpus(tm::VectorSource(data_char_inaugural[49:57]))
    quantCorp <- corpus(tmCorp)
    summary(quantCorp)
}

# construct a corpus from a data.frame
mydf <- data.frame(letter_factor = factor(rep(letters[1:3], each = 2)),
                  some_ints = 1L:6L,
                  some_text = paste0("This is text number ", 1:6, "."),
                  stringsAsFactors = FALSE,
                  row.names = paste0("fromDf_", 1:6))
mydf
summary(corpus(mydf, text_field = "some_text", source = "From a data.frame called mydf."))

# construct a corpus from a kwic object
mykwic <- kwic(inaugCorpus, "southern")
summary(corpus(mykwic))
}
\author{
Kenneth Benoit and Paul Nulty
}
\seealso{
\link{corpus-class}, \link{docvars}, \link{metadoc}, \link{metacorpus}, 
  \link{settings}, \link{texts}, \link{ndoc}, \link{docnames}
}
\keyword{corpus}

