% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/textmodel-wordfish.R
\name{MCMCirtPoisson1d}
\alias{MCMCirtPoisson1d}
\title{Bayesian-MCMC version of a 1-dimensional Poisson IRT scaling model}
\usage{
MCMCirtPoisson1d(dtm, dir = c(1, 2), control = list(sigma = 3, startparams =
  NULL), verbose = TRUE, itembase = 0, startRandom = FALSE, nChains = 1,
  nAdapt = 100, nUpdate = 300, nSamples = 200, nThin = 1, ...)
}
\arguments{
\item{dtm}{The document-term matrix.  Ideally, documents form the rows of
this matrix and words the columns, although it should be correctly coerced
into the correct shape.}

\item{dir}{A two-element vector, enforcing direction constraints on theta
and beta, which ensure that \code{theta[dir[1]] < theta[dir[2]]}. The
elements of \code{dir} will index documents.}

\item{control}{list specifies options for the estimation process. These are:
\code{tol}, the proportional change in log likelihood sufficient to halt
estimation, \code{sigma} the standard deviation for the beta prior in
poisson form, and \code{startparams} a previously fitted wordfish model.
\code{verbose} generates a running commentary during estimation.  See
\code{\link[austin]{wordfish}}.}

\item{verbose}{Turn this on for messages.  Default is \code{TRUE}.}

\item{itembase}{Item constraints for identifying the model.  Options are:
 \describe{
  \item{\code{0}}{(default) Use the sum to zero constraint, on the item parameters,
  such that \eqn{\sum_j \psi_j = \sum_j \beta_j = 0}.}

  \item{integer or feature label}{A index or column name from the input dfm indicating which item
  should be used as the reference category, for setting corner constrants on the
  item paramters such that \eqn{\psi_j = \beta_j=0}.}

  \item{NULL}{Do not use item constraints, and hope that the mode is identified by setting
  \eqn{\theta_i \sim N(0,1)}.}}}

\item{startRandom}{\code{FALSE} by default, uses random starting values
(good for multiple chains) if \code{TRUE}}

\item{nChains}{Number of chains to run in JAGS.}

\item{nAdapt}{Adaptation iterations in JAGS.}

\item{nUpdate}{Update iterations in JAGS.}

\item{nSamples}{Number of posterior samples to draw in JAGS.}

\item{nThin}{Thinning parameter for drawing posterior samples in JAGS.}

\item{...}{Additional arguments passed through to \link{MCMCirtPoisson1d} and to JAGS.}
}
\value{
An augmented \code{\link[austin]{wordfish}} class object with additional
  stuff packed in.  To be documented.
}
\description{
\code{MCMCirtPoisson1d} implements a flexible, Bayesian model estimated in
JAGS using MCMC. It is based on the implementation of
\code{\link[austin]{wordfish}} from the \link{austin} package. Options
include specifying a model for alpha using document-level covariates, and
partitioning the word parameters into different subsets, for instance,
countries.
}
\details{
\code{textmodel_wordfish}

  The ability to constrain an item is designed to make the additive
  Poisson GLM mathematically equivalent to the multinomial model for \eqn{R
  \times C} contingency tables.  We recommend using the default setting of
  \code{itembase=0}, or setting a "neutral" feature to
  have \eqn{\psi_{0}=0 and \beta_{0}=0}, for example the word "the" for a
  text count model (assuming this word has not been removed).  Note:
  Currently the item-level return values will be returned in the original
  order suppled (\code{psi} and \code{beta}) but this is not true yet for
  the \code{mcmc.samples} value, which will have the constrained category as
  index 1.  (We will fix this soon.)
}
\examples{
\dontrun{
library(quantedaData)
data(ie2010Corpus)
ieDfm <- dfm(ie2010Corpus)
# estimate the maximium likelihood wordfish model from austin
wf <- textmodel_wordfish(ieDfm, dir=c(2,1))

# estimate the MCMC model, default values
wfMCMCstz   <- textmodel_wordfish(ieDfm, method="mcmc", dir=c(2,1))
wfMCMCthe   <- textmodel_wordfish(ieDfm, method="mcmc", itembase="the", dir=c(2,1))
wfMCMCuncon <- textmodel_wordfish(ieDfm, method="mcmc", itembase=NULL, dir=c(2,1))

# compare the estimates of \\theta_i
require(psych)
pairs.panels(data.frame(ML=wf$theta,
                        MCMCbase=wfMCMC$theta,
                        MCMCuncon=wfMCMCuncon$theta),
             smooth=FALSE, scale=FALSE, ellipses=FALSE, lm=TRUE, cex.cor=2.5)
# inspect a known "opposition" word beta values
wfMCMCstz$beta[which(wfMCMCstz$words=="fianna")]
wfMCMCthe$beta[which(wfMCMCstz$words=="fianna")]
wfMCMCuncon$beta[which(wfMCMCthe$words=="fianna")]

# random starting values, for three chains
dtm.sample <- trim(dtm, sample=200)
wfMCMCsample <- MCMCirtPoisson1d(dtm.sample, dir=c(2,1), startRandom=TRUE, nChains=3)
}
}
\author{
Kenneth Benoit
}

