% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tokens_replace.R
\name{tokens_replace}
\alias{tokens_replace}
\title{replace types in tokens object}
\usage{
tokens_replace(x, pattern, replacement = NULL, case_insensitive = TRUE,
  verbose = quanteda_options("verbose"))
}
\arguments{
\item{x}{\link{tokens} object whose token elements will be replaced}

\item{pattern}{a character vector, list of character vectors, \link{dictionary},
\link{collocations}, or \link{dfm}. See \link{pattern} for details.}

\item{replacement}{a vector of types to substitute}

\item{case_insensitive}{ignore case when matching, if \code{TRUE}}

\item{verbose}{print status messages if \code{TRUE}}
}
\description{
This funciton substitutes token types based on vectorized one-to-one matching.
Since this function is created for lemmatization or user-defined stemming, it
does not support multi-word features, or glob and regex patterns. Please use
\code{tokens_lookup} with \code{exclusive = FALSE} for substitutions of more
complex patterns.
}
\examples{
toks <- tokens(data_corpus_irishbudget2010)

# lemmatization
infle <- c('foci', 'focus', 'focused', 'focuses', 'focusing', 'focussed', 'focusses', 'focussing')
lemma <- rep('focus', length(infle))
toks2 <- tokens_replace(toks, infle, lemma)
kwic(toks2, 'focus*')

# stemming
type <- types(toks)
stem <- char_wordstem(type, 'porter')
toks3 <- tokens_replace(toks, type, stem, case_insensitive = FALSE)
identical(toks3, tokens_wordstem(toks, 'porter'))
}
