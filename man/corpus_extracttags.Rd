% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/corpus_extract.R
\name{corpus_extracttags}
\alias{corpus_extracttags}
\alias{char_extracttags}
\title{extract and store values in corpus}
\usage{
corpus_extracttags(x, pattern, valuetype = c("glob", "regex", "fixed"),
  position = c("after", "before"), use_docvars = TRUE, ...)

char_extracttags(x, pattern, valuetype = c("glob", "regex", "fixed"), ...)
}
\arguments{
\item{x}{character or \link{corpus} object whose texts will be segmented}

\item{pattern}{a character vector, list of character vectors, \link{dictionary},
\link{collocations}, or \link{dfm}. See \link{pattern} for details.}

\item{valuetype}{how to interpret keyword expressions: \code{"glob"} for 
"glob"-style wildcard expressions; \code{"regex"} for regular expressions;
or \code{"fixed"} for exact matching. See \link{valuetype} for details.}

\item{position}{specify whether texts should be split before or after the
pattern}

\item{use_docvars}{(for corpus objects only) if \code{TRUE}, repeat the 
docvar values for each segmented text; if \code{FALSE}, drop the docvars in
the segmented corpus. Dropping the docvars might be useful in order to 
conserve space or if these are not desired for the segmented corpus.}

\item{...}{not used}
}
\value{
\code{corpus_extract} returns a corpus of texts, with extracted 
  values in \link{docvars}.

\code{char_extracttags} returns a character vector of matched characters
}
\description{
Extract characters from douments with regular expression pattern and store 
them in \link{corpus} in corpus.
}
\examples{
corp <- 
corpus(c("##INTRO This is the introduction.",
         "##DOC1 This is the first document.",
         "##DOC2 This is the second document.",
         "##DOC3 This is the third document."))
corp <- corpus_extracttags(corp, '##*', valuetype = "glob", position = 'before')
head(corp)
head(docvars(corp))

corp2 <- 
corpus(c("##INTRO This is the introduction.
          ##DOC1 This is the first document.  Second sentence in Doc 1.
          ##DOC3 Third document starts here.  End of third document.",
         "##INTRO Document ##NUMBER Two starts before ##NUMBER Three."))
corp2_seg <- corpus_extracttags(corp2, '##[A-Z0-9]+', valuetype = "regex", position = 'before')
head(corp2_seg)
head(docvars(corp2_seg))

## segmenting a character object

txts <- c("##INTRO This is the introduction.",
          "##DOC1 This is the first document.",
          "##DOC2 This is the second document.",
          "##DOC3 This is the third document.")
char_extracttags(txts, '##[A-Z0-9]+')
}
\keyword{character}
