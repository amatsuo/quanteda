% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/stopwords.R
\name{selectFeatures}
\alias{selectFeatures}
\alias{selectFeatures.dfm}
\title{select features from an object}
\usage{
selectFeatures(x, features, ...)

\method{selectFeatures}{dfm}(x, features = NULL, selection = c("keep",
  "remove"), verbose = TRUE, ...)
}
\arguments{
\item{x}{object whose features will be selected}

\item{features}{character vector of \link[regex]{regular expressions}
definding the features to be selected, or a dictionary class object whose
values will provide the features to be selected.  If a dictionary class
object, the values will be interpreted as regular expressions.  (We may add
the option for other formats in the next revision.)}

\item{...}{supplementary arguments passed to the underlying functions in
\code{\link[stringi]{stri_detect_regex}}, such as \code{case_insensitive}}

\item{selection}{whether to keep or remove the features}

\item{verbose}{if \code{TRUE} print message about how many features were
removed}
}
\description{
This function selects or discards features from a dfm.variety of objects,
such as text, a dfm, or a list of collocations.  The most common usage for
\code{removeFeatures} will be to eliminate stop words from a text or
text-based object, or to select only features from a list of regular
expression.
}
\examples{
myDfm <- dfm(c("My Christmas was ruined by your opposition tax plan.",
               "Does the United_States or Sweden have more progressive taxation?"),
             verbose = FALSE)
mydict <- dictionary(list(countries = c("United_States", "Sweden", "France"),
                          wordsEndingInY = c("by", "my"),
                          notintext = "blahblah"))
selectFeatures(myDfm, mydict)
selectFeatures(myDfm, mydict, case_insensitive = TRUE)
selectFeatures(myDfm, c("s$", ".y"), "keep")
selectFeatures(myDfm, c("s$", ".y"), "remove")
}
\seealso{
\link{removeFeatures}
}

