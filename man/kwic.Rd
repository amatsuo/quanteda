% Generated by roxygen2 (4.0.1): do not edit by hand
\name{kwic}
\alias{kwic}
\alias{kwic.character}
\alias{kwic.corpus}
\title{List key words in context from a text or a corpus of texts.}
\usage{
kwic(text, word, window = 5, regex = TRUE)

\method{kwic}{character}(texts, word, window = 5, regex = TRUE)

\method{kwic}{corpus}(corp, word, window = 5, regex = TRUE)
}
\arguments{
\item{text}{A text character scalar or a quanteda corpus.  (Currently does not support character vectors.)}

\item{word}{A keyword chosen by the user.}

\item{window}{The number of context words to be displayed around the keyword.}

\item{regex}{If TRUE (default), then "word" is a regular expression, otherwise only match the whole word.
Note that if regex=TRUE and no special regular expression characters are used in the search query,
then the concordance will include all words in which the search term appears, and not just when it
appears as an entire word.  (For instance, searching for the word "key" will also return "whiskey".)}

\item{texts}{a vector of texts}

\item{corp}{a quanteda corpus object}
}
\value{
A data frame with the context before (\code{preword}), the keyword in its original format (\code{word}, preserving case and attached punctuation), and the context after (\code{postword}).  The rows of the
dataframe will be named with the word index position, or the text name and the index position
for a corpus object.
}
\description{
For a text or a collection of texts (in a quanteda corpus object), return a list
of a keyword supplied by the user in its immediate context, identifying the source
text and the word index number within the source text.  (Not the line number, since
the text may or may not be segmented using end-of-line delimiters.)
}
\examples{
kwic(inaugTexts, "terror")
kwic(inaugTexts, "terror", regex=FALSE)  # returns only whole word, without trailing punctuation
data(iebudgets)
kwic(subset(iebudgets, year==2010), "Christmas", window=4) # on a corpus
}
\author{
Kenneth Benoit and Paul Nulty
}

