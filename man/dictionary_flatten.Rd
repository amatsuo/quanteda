% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dictionaries.R
\name{dictionary_flatten}
\alias{dictionary_flatten}
\title{Flatten a hierarchical dictionary into a list of character vectors}
\usage{
dictionary_flatten(elms, parent = "", dict = list())
}
\arguments{
\item{elms}{list to be flattened}

\item{parent}{parent list name, gets built up through recursion in the same way that \code{unlist(dictionary, recursive=TRUE)} works}

\item{dict}{the bottom list of dictionary entries ("synonyms") passed up from recursive calls}
}
\value{
A dictionary flattened down one level further than the one passed
}
\description{
Converts a hierarchical dictionary (a named list of named lists, ending in character
vectors at the lowest level) into a flat list of character vectors.  Works like
\code{unlist(dictionary, recursive=TRUE)} except that the recursion does not go to the
bottom level.  Called by \code{\link{dfm}}.
}
\examples{
dictPopulismEN <- 
    dictionary(list(populism=c("elit*", "consensus*", "undemocratic*", "referend*",
                               "corrupt*", "propagand", "politici*", "*deceit*",
                               "*deceiv*", "*betray*", "shame*", "scandal*", "truth*",
                               "dishonest*", "establishm*", "ruling*")))
dictionary_flatten(dictPopulismEN)

hdict <- list(level1a = list(level1a1 = c("l1a11", "l1a12"),
                            level1a2 = c("l1a21", "l1a22")),
              level1b = list(level1b1 = c("l1b11", "l1b12"),
                             level1b2 = c("l1b21", "l1b22", "l1b23")),
              level1c = list(level1c1a = list(level1c1a1 = c("lowest1", "lowest2")),
                             level1c1b = list(level1c1b1 = c("lowestalone"))))
dictionary_flatten(hdict)
}
\author{
Kohei Watanabe
}
\keyword{internal}

