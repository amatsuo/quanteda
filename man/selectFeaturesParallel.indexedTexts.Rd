% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/selectFeatures.R
\name{selectFeaturesParallel.indexedTexts}
\alias{selectFeaturesParallel.indexedTexts}
\title{Parallel version of selectFeatures for index tokens}
\usage{
selectFeaturesParallel.indexedTexts(x, features, selection = c("keep",
  "remove"), valuetype = c("glob", "regex", "fixed"),
  case_insensitive = TRUE, padding = FALSE, verbose = FALSE, ...)
}
\arguments{
\item{x}{object whose features will be selected}

\item{features}{one of: a character vector of features to be selected, a 
\link{dfm} whose features will be used for selection, or a dictionary class
object whose values (not keys) will provide the features to be selected. 
For \link{dfm} objects, see details in the Value section below.}

\item{selection}{whether to keep or remove the features}

\item{valuetype}{how to interpret feature vector: \code{fixed} for words as 
is; \code{"regex"} for regular expressions; or \code{"glob"} for 
"glob"-style wildcard}

\item{case_insensitive}{ignore the case of dictionary values if \code{TRUE}}

\item{padding}{(only for \code{tokenizedTexts} objects) if \code{TRUE}, leave
an empty string where the removed tokens previously existed.  This is
useful if a positional match is needed between the pre- and post-selected
features, for instance if a window of adjacency needs to be computed.}

\item{verbose}{if \code{TRUE} print message about how many features were 
removed}

\item{...}{supplementary arguments passed to the underlying functions in 
\code{\link[stringi]{stri_detect_regex}}.  (This is how 
\code{case_insensitive} is passed, but you may wish to pass others.)}
}
\description{
Parallel version of selectFeatures for index tokens
}
\examples{
library(fastmatch)
data(SOTUCorpus, package = "quantedaData")
toks <- tokenize(SOTUCorpus, removePunct = TRUE)
types <- unique(unlist(toks, use.names=FALSE))
toks_index <- lapply(toks, function(x, y) match(x, y), types)
stopwords_index <- match(stopwords("english"), types)
stopwords_index <- stopwords_index[!is.na(stopwords_index)]
toks2 <- selectFeatures(toks, stopwords("english"), case_insensitive=FALSE, selection="remove", verbose = FALSE)
toks2_index <- selectFeaturesParallel.indexedTexts(toks_index, stopwords_index, "remove")
head(toks2[[1]], 20)
head(types[toks2_index[[1]]], 20)
microbenchmark::microbenchmark(
   seri = selectFeatures(toks, stopwords("english"), case_insensitive=FALSE, selection="remove", verbose = FALSE),
   para = selectFeaturesParallel.tokenizedTexts(toks, stopwords("english"), selection="remove", verbose = FALSE),
   paraint = selectFeaturesParallel.indexedTexts(toks_index, stopwords_index, selection="remove"),
   unit='relative'
)
}

