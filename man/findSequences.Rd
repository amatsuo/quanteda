% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findSequences.R
\name{findSequences}
\alias{findSequences}
\title{find sequences of tokens}
\usage{
findSequences(x, tokens, count_min = 2, smooth = 0.001)
}
\arguments{
\item{x}{tokenizedTexts objects}

\item{tokens}{types of token in sequuences}

\item{count_min}{minimum frequency of sequences}

\item{smooth}{smoothing factor}
}
\description{
This function automatically identify sequences of tokens. This algorithm is   
based on Blaheta and Johnson's “Unsupervised Learning of Multi-Word Verbs”.
}
\examples{
data(SOTUCorpus, package = "quantedaData")
sents <- tokenize(SOTUCorpus, what='sentence', simplify = TRUE)
tokens <- tokenize(sents, removePunct = TRUE)
types <- unique(unlist(tokens))

# Extracting multi-part nouns
types_upper <- types[stringi::stri_detect_regex(types, "^([A-Z][a-z\\\\-]{2,})")]
seqs <- findSequences(tokens, types_upper, count_min=2)
head(seqs)

# Types can be any words
types_lower <- types[stringi::stri_detect_regex(types, "^([a-z]+)$") & !types \%in\%stopwords()]
seqs2 <- findSequences(tokens, types_lower, count_min=2)
head(seqs2)
}

