% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/textmodel-S4generics.R
\docType{methods}
\name{textmodel}
\alias{textmodel}
\alias{textmodel,dfm,ANY,missing,character-method}
\alias{textmodel,formula,missing,dfm,character-method}
\title{fit a text model}
\usage{
textmodel(x, y = NULL, data = NULL, model = c("wordscores", "NB",
  "wordfish", "lda", "ca"), ...)

\S4method{textmodel}{dfm,ANY,missing,character}(x, y = NULL, data = NULL,
  model = c("wordscores", "NB", "wordfish", "lda", "ca"), ...)

\S4method{textmodel}{formula,missing,dfm,character}(x, y = NULL,
  data = NULL, model = c("wordscores", "NB", "wordfish", "lda", "ca"), ...)
}
\arguments{
\item{x}{a quanteda \link{dfm} object containing feature counts by document}

\item{y}{for supervised models, a vector of class labels or values for
training the model, with \code{NA} for documents to be excluded from the
training set; for unsupervised models, this will be left NULL}

\item{data}{dfm or data.frame from which to take the formula}

\item{model}{the model type to be fit.  Currently implemented methods are:
  \describe{ \item{\code{wordscores}}{Fits the "wordscores" model of Laver,
  Benoit, and Garry (2003). Options include the original linear scale of LBG
  or the logit scale proposed by Beauchamps (2001).  See
  \link{textmodel_wordscores}.}

  \item{\code{NB}}{Fits a Naive Bayes model to the dfm, with options for
  smoothing, setting class priors, and a choice of multinomial or binomial
  probabilities.}}}

\item{...}{additional arguments to be passed to specific model types}

\item{formula}{An object of class \link{formula} of the form \code{y ~ x1
+ x2 + ...}.  (Interactions are not currently allowed for any of the models
implemented.)  The \code{x} variable(s) is
typically a \link{dfm}, and the y variable a vector of class labels or
training values associated with each document.}
}
\value{
a \code{textmodel} class list, containing the fitted model and
  additional information specific to the model class.  See the methods for
  specific models, e.g. \link{textmodel_wordscores}, \link{textmodel_NB},
  etc.
}
\description{
Fit a text model to a dfm.  Creates an S3 object of \code{textmodelfitted}
class, which will also have an S3 class stamp for the specific model fitted.
The exact contents of this fitted model will depend on which model was called
(see \code{model} types below).
}
\section{Class hierarchy}{
 Here will go the description of the class hierarchy
  that governs dispatch for the predict, print, summary methods, since this
  is not terribly obvious. (Blame it on the S3 system.)
}
\examples{
data(ie2010Corpus, package="quantedaData")
\dontshow{
# test with old-style matrix-based dense dfm
ieDfmd <- dfm(ie2010Corpus, matrixType="dense", verbose=FALSE)
refscores <- c(rep(NA, 4), -1, 1, rep(NA, 8))
ws <- textmodel(ieDfmd, refscores, model="wordscores", smooth=1)
ws <- textmodel(ieDfmd, refscores, model="wordscores")
ws <- textmodel(refscores ~ . -1, data=ieDfmd, model="wordscores")
rm(ieDfmd)
}
ieDfm <- dfm(ie2010Corpus, verbose=FALSE)
refscores <- c(rep(NA, 4), -1, 1, rep(NA, 8))
ws <- textmodel(ieDfm, refscores, model="wordscores", smooth=1)
# alternative formula notation - but slower
wsform <- textmodel(refscores ~ . - 1, data=ieDfm, model="wordscores", smooth=1)
identical(ws$pi, wsform$pi)  # compare wordscores from the two models
bs <- textmodel(ieDfm[5:6,], refscores[5:6], model="wordscores", scale="logit", smooth=1)
plot(ws$pi, bs$pi, xlim=c(-1, 1), xlab="Linear word score", ylab="Logit word score")

# prediction method for wordscores
predict(ws, ieDfm, rescaling="mv")

# wordfish
wf <- textmodel(ieDfm, model="wordfish", dir=c(2,1))
}
\seealso{
\code{\link{textmodel_wordscores}}, \code{\link{textmodel_NB}},
  \code{\link{textmodel_wordfish}}, \code{\link{textmodel_lda}},
  \code{\link{textmodel}}
}

