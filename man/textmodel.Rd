% Generated by roxygen2 (4.0.2): do not edit by hand
\name{textmodel}
\alias{textmodel}
\alias{textmodel.dfm}
\alias{textmodel.formula}
\title{fit a text model}
\usage{
textmodel(x, ...)

\method{textmodel}{dfm}(x, y, model = c("wordscores", "NB"), ...)

\method{textmodel}{formula}(formula, data = NULL, model = c("wordscores",
  "NB"), ...)
}
\arguments{
\item{x}{a quanteda \link{dfm} object containing feature counts by document}

\item{...}{additional arguments to be passed to specific model types}

\item{y}{for supervised models, a vector of class labels or values for
training the model, with \code{NA} for documents to be excluded from the
training set; for unsupervised models, this will be left NULL}

\item{model}{the model type to be fit.  Currently implemented methods are:
  \describe{ \item{\code{wordscores}}{Fits the "wordscores" model of Laver,
  Benoit, and Garry (2003). Options include the original linear scale of LBG
  or the logit scale proposed by Beauchamps (2001).  See
  \link{textmodel_wordscores}.}

  \item{\code{NB}}{Fits a Naive Bayes model to the dfm, with options for
  smoothing, setting class priors, and a choice of multinomial or binomial
  probabilities.}}}

\item{formula}{An object of class \link{formula} of the form \code{class ~ x1
+ x2 + ...}.  (Interactions are not currently allowed for any of the models
implemented.)  The \code{x} variable(s) is
typically a \link{dfm}, and the y variable a vector of class labels or
training values associated with each document.}

\item{data}{dfm or data.frame from which to take the formula}

\item{method}{the model type to be fit}
}
\value{
a \code{textmodel} class list, containing the fitted model and
  additional information specific to the model class.  See the methods for
  specific models, e.g. \link{textmodel_wordscores}, \link{textmodel_NB},
  etc.
}
\description{
Fit a text model to a dfm.

Provides an alternative syntax for fitting text models, using the ~ notation
as would be used by lm or glm.
}
\section{Class hierarchy}{

Here will go the description of the class hierarchy that governs dispatch for the
predict, print, summary methods, since this is not terribly obvious.
(Blame it on the S3 system.)
}
\examples{
require(quantedaData)
data(ie2010Corpus)
ieDfm <- dfm(ie2010Corpus)
refscores <- c(rep(NA, 4), -1, 1, rep(NA, 8))
ws <- textmodel(ieDfm, refscores, model="wordscores", smooth=1)
bs <- textmodel(as.dfm(ieDfm[5:6,]), refscores[5:6], model="wordscores", scale="logit", smooth=1)
plot(ws$pi, bs$pi, xlim=c(-1, 1), xlab="Linear word score", ylab="Logit word score")

# prediction method for wordscores
predict(ws, ieDfm, rescaling="mv")
}
\author{
Paul Nulty
}
\seealso{
\code{\link{textmodel_wordscores}}, \code{\link{textmodel_NB}},
\code{\link{textmodel}}
}

