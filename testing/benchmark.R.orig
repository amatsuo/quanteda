library(quanteda)
library(austin)
library(ggplot2)
library(reshape2)
library(plyr)
#devtools::install_github("dplyr")
#library(dplyr)
options(error=dump.frames)
texts <- getTextDir("~/Dropbox/QUANTESS/corpora/movieReviews/smaller/neg/")

<<<<<<< HEAD
oldTimes <- vector()
newTimes <- vector()

testSizes <- c(10, 1000)

=======
plyTimes <- vector()
matTimes <- vector()
testSizes <- c(60, 90)
insp<-matrix()
>>>>>>> dev_paul
for (numDocs in testSizes){
  print(numDocs)
  vals <-vector()
  vals[1:(numDocs/2)] <- "neg"
  atts <- data.frame(vals)
  names(atts)<-c("lab")
  negTexts <- texts[1:(numDocs/2)]
  movies <- corpus.create(negTexts, attribs=atts)
  
  texts <- getTextDir("~/Dropbox/QUANTESS/corpora/movieReviews/smaller/pos/")
  vals <-vector()
  vals[1:(numDocs/2)] <- "pos"
  
  atts <- data.frame(vals)
  names(atts)<-c("lab")
  posTexts <- texts[1:(numDocs/2)]
  movies <- corpus.append(movies, posTexts, atts)

  Rprof(append = FALSE)
  fvm <- create.fvm.corpus(movies)
  Rprof(NULL)
  insp<-fvm
  matTimes <- c(matTimes, summaryRprof()$sampling.time)
  
  Rprof(append = FALSE)
  fvm <- create.fvm.corpus(movies)
  Rprof(NULL)
  plyTimes <- c(plyTimes, summaryRprof()$sampling.time)
}
df <- data.frame(testSizes, matTimes, plyTimes)
results <- melt(data = df, id.vars = "testSizes", value.name="seconds")
ggplot(data = results, aes(x = testSizes , y = seconds, colour = variable)) + geom_line()
